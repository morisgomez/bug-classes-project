// Do not edit this file.

#include "bug.h"
#include <iostream>
#include <cmath>

using namespace std;

class Tester {
    public:
        // Checks answer and prints success or failed
        bool test(double got, double expected);
    private:
        size_t test_num = 1;
        double thresh = 1.0 / 1024.0;
};

bool Tester::test(double got, double expected) {
    cout << "====  Test case " << test_num << "  ====" << endl;
    
    bool success = true;
    
    if (abs(got - expected) >= thresh) {
        cout << "Not passed yet. Keep trying!" << endl;
        cout << "        Got: " << got << endl;
        cout << "   Expected: " << expected << endl;
        success = false;
        cout << endl;
    }
    
    if (success) {
        cout << "Passed." << endl << endl;
    }
    
    test_num++;
    
    return success;
}

int main() {

    Tester tester;
    
    bool all_passed = true;
    
    // Test case 1
    Bug bugsy1 = Bug(10);
    
    bugsy1.move();
    bugsy1.move();
    bugsy1.turn();
    bugsy1.move();
    bugsy1.move();
    bugsy1.move();
    
    bool test_case_passed = tester.test(bugsy1.get_position(), 9);
    all_passed = test_case_passed && all_passed;

    // Test case 2
    Bug bugsy2 = Bug(0);
    
    bugsy2.move();
    bugsy2.move();
    bugsy2.move();
    bugsy2.move();
    bugsy2.move();

    test_case_passed = tester.test(bugsy2.get_position(), 5);
    all_passed = test_case_passed && all_passed;

    // Test case 3
    Bug bugsy3 = Bug(-100);
    
    bugsy3.turn();
    bugsy3.move();
    bugsy3.move();
    bugsy3.move();
    bugsy3.move();
    bugsy3.turn();
    bugsy3.move();
    
    test_case_passed = tester.test(bugsy3.get_position(), -103);
    all_passed = test_case_passed && all_passed;
    
    // Test case 4
    Bug bugsy4 = Bug(-3);
    
    tester.test(bugsy4.get_position(), -3);
    all_passed = test_case_passed && all_passed;
    
    // Test case 5
    Bug bugsy5 = Bug(-7);
    
    bugsy5.turn();
    bugsy5.turn();
    bugsy5.turn();
    
    test_case_passed = tester.test(bugsy5.get_position(), -7);
    all_passed = test_case_passed && all_passed;
    
    if (all_passed) {
        cout << "Hooray, you passed all tests!" << endl;
    }

    return 0;
}
